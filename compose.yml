x-default-policy: &default_policy
  restart: always
  networks:
    - llm-observability

services:
  app:
    <<: *default_policy
    container_name: app
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - 8501:8501
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      COHERE_API_KEY: ${COHERE_API_KEY}
      ENDPOINT: ${ENDPOINT}
      PUBLIC_KEY: ${PUBLIC_KEY}
      SECRET_KEY: ${SECRET_KEY}
      LANGFUSE_RELEASE: 0.0.1-SNAPSHOT
    volumes:
      - ./app/docs:/app/docs
    develop:
      watch:
        - action: sync
          path: ./app/
          target: /app
        - action: rebuild
          path: ./app/

  langfuse-server:
    <<: *default_policy
    container_name: langfuse
    image: langfuse/langfuse:2
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysalt
      - ENCRYPTION_KEY=a277a2912fbbc0aabbfe6eac95b597ae03ffe30477bb388e8d32d7b010e89875 # generate via `openssl rand -hex 32`
      - NEXTAUTH_URL=http://localhost:3000
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}

  db:
    <<: *default_policy
    container_name: postgresql
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    volumes:
      - database_data:/var/lib/postgresql/data

networks:
  llm-observability:

volumes:
  database_data:
    driver: local
